// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id            Int      @id @default(autoincrement())
  nombre        String
  apellido      String
  email         String   @unique
  telefono      String?
  password      String
  rol           String   @default("empleado")
  departamento  String
  fecha_ingreso DateTime @default(now())
  activo        Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  pedidos       Pedido[]
  
  // Verificaci√≥n de email
  emailVerificado        Boolean   @default(false)
  tokenVerificacion      String?
  tokenVerificacionExpira DateTime?
}

model Producto {
  id          Int      @id @default(autoincrement())
  codigo      String   @unique
  descripcion String
  precio      Float
  categoria   String
  detalles    String?
  activo      Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Pedido {
  id            Int      @id @default(autoincrement())
  numero_pedido String   @unique
  cliente_nombre String
  cliente_email String
  fecha_pedido  DateTime @default(now())
  estado        String
  total         Float
  detalles      Json?
  usuarioId     Int
  usuario       Usuario  @relation(fields: [usuarioId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
